<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Agregar Producto</title>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <h1>Agregar Producto</h1>
    
    <form id="productForm" action="/addProduct" method="post">
        <label for="title">Título del Producto:</label>
        <input type="text" id="title" name="title" required><br>

        <label for="description">Descripción:</label>
        <textarea id="description" name="description" required></textarea><br>

        <label for="code">Código:</label>
        <input type="text" id="code" name="code" required><br>

        <label for="price">Precio:</label>
        <input type="number" id="price" name="price" required><br>

        <label for="status">Estado:</label>
        <input type="checkbox" id="status" name="status" value="true"><br>

        <label for="stock">Stock:</label>
        <input type="number" id="stock" name="stock" required><br>

        <label for="category">Categoría:</label>
        <input type="text" id="category" name="category" required><br>

        <label for="thumbnails">URL de la Imagen:</label>
        <input type="url" id="thumbnails" name="thumbnails" required><br>

        <label for="carru1">URL Carrusel 1:</label>
        <input type="url" id="carru1" name="carru1" required><br>

        <label for="carru2">URL Carrusel 2:</label>
        <input type="url" id="carru2" name="carru2" required><br>

        <label for="carru3">URL Carrusel 3:</label>
        <input type="url" id="carru3" name="carru3" required><br>

        <label for="minimo">Stock Mínimo:</label>
        <input type="number" id="minimo" name="minimo" required><br>

        <button type="submit">Agregar Producto</button>
    </form>

<script>
    const socket = io(); // Conectar al servidor WebSocket
    
    // Manejar el evento de formulario y emitir datos al servidor
    document.getElementById('productForm').addEventListener('submit', (e) => {
        e.preventDefault();

        // Recopilar datos del formulario
        const formData = new FormData(e.target);
        const productData = {};

        formData.forEach((value, key) => {
            productData[key] = value;
        });
        console.log('Formulario enviado:', productData)

        // Emitir un evento de WebSocket para enviar los datos del producto
        socket.emit('addProduct', productData);

        // Limpiar el formulario
        e.target.reset();
    });
</script>
</body>
</html>
